$script = <<-SCRIPT
export DEBIAN_FRONTEND=noninteractive

dpkg --add-architecture i386
apt update
#apt upgrade -y

## 32bit
apt -yq install libc6:i386 libc6-dev-i386 libncurses5:i386 libstdc++6:i386

apt -yq install software-properties-common apt-transport-https python-dev \
python-pip python3-dev python3-pip python3-cryptography python-openssl \
python-virtualenv python-urllib3 virtualenvwrapper python-scapy make \
cmake stunnel socat hydra p7zip rar unrar unzip strace ltrace bzip2 rdesktop \
whois samba-common samba-common-bin yasm nasm sslsplit gdb gdb-multiarch \
gdbserver gcc gcc-multilib gcc-mingw-w64

apt autoclean -y
apt autoremove -y
apt -y install -f

## vagrant user commands
sudo -u vagrant -H bash << EOF

cd /home/vagrant
test -d dotfiles  || git clone https://github.com/boogy/dotfiles
sudo -H -u vagrant git clone https://github.com/boogy/dotfiles
sudo -H -u vagrant bash -c "echo y|/home/vagrant/dotfiles/install.sh" &>/dev/null

mkdir -p /home/vagrant/tools && cd $_
sudo -H -u vagrant pip2 install --upgrade --user r2pipe
sudo -H -u vagrant pip2 install --upgrade --user psutil
sudo -H -u vagrant pip2 install --upgrade --user requests
sudo -H -u vagrant pip2 install --upgrade --user scapy
sudo -H -u vagrant pip2 install --upgrade --user pwntools
sudo -H -u vagrant pip3 install --upgrade --user requests

cd /home/vagrant/tools
test -d pwndbg    || git clone https://github.com/pwndbg/pwndbg.git
bash /home/vagrant/tools/pwndbg/setup.sh &>/dev/null

test -d ROPgadget || git clone https://github.com/JonathanSalwan/ROPgadget
# test -d radare2   || git clone https://github.com/radare/radare2
# test -d impacket  || git clone https://github.com/SecureAuthCorp/impacket.git

EOF

SCRIPT

Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/bionic64"
    config.vm.hostname = "ubuntu1804"

    # config.vm.network "forwarded_port", guest: 80, host: 8080, protocol: "tcp"
    # config.vm.network "forwarded_port", guest: 443, host: 8443, protocol: "tcp"
    # config.vm.network "forwarded_port", guest: 5000, host: 8080, protocol: "tcp"
    # config.vm.network "public_network", type: "dhcp", bridge: "eth0"
    config.vm.network "private_network", type: "dhcp"

    config.vm.provider "virtualbox" do |v|
        v.name = "ubuntu1804"
        v.memory = 2048
        v.cpus = 2
        v.gui = false
    end
    config.vm.provision "shell", inline: $script
    config.vm.synced_folder "/home/boogy", "/home/vagrant/share/"
end

